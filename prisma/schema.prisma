// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String  @id @default(cuid())
  firstName     String
  lastName      String?
  userName      String  @unique
  email         String  @unique
  profilePicUrl String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  follower  Follows[] @relation("follower")
  following Follows[] @relation("following")

  likes     Like[]
  bookmarks Bookmark[]

  replies Reply[]
  posts   Post[]
}

model Follows {
  follower   User   @relation("follower", fields: [followerId], references: [id])
  followerId String

  following   User   @relation("following", fields: [followingId], references: [id])
  followingId String

  @@id([followerId, followingId])
}

model Post {
  id       String  @id @default(cuid())
  content  String
  imageUrl String?

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  likes     Like[]
  bookmarks Bookmark[]
  replies   Reply[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Reply {
  id       String  @id @default(cuid())
  content  String
  imageUrl String?

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  post   Post   @relation(fields: [postId], references: [id])
  postId String

  parent   Reply?  @relation("replyTree", fields: [parentId], references: [id])
  parentId String?

  replies Reply[] @relation("replyTree")
}

model Like {
  postId String
  userId String
  post   Post   @relation(fields: [postId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@id([postId, userId])
}

model Bookmark {
  postId String
  userId String
  post   Post   @relation(fields: [postId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@id([postId, userId])
}
